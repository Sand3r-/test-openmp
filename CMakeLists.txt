cmake_minimum_required(VERSION 2.8)
project(test-openmp)

include(CheckCXXCompilerFlag)

find_package(OpenMP)
if(OPENMP_FOUND)
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS} -v")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
else()
message("OpenMP support missing in compiler")
endif()

if(UNIX)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
add_definitions(-std=c++11)
elseif(COMPILER_SUPPORTS_CXX0X)
add_definitions(-std=c++0x)
endif()
endif()

add_definitions(-Wall)
#add_definitions(-S -masm=intel)

#add_executable(test-openmp main.cpp trace.cpp)
add_executable(test-openmp-gomp main.cpp) 
#add_executable(test-openmp-iomp5 main.cpp) 
#target_link_libraries(test-openmp-iomp5 -Wl,--as-needed iomp5 -L/home/jczaja/test-openmp)
#target_link_libraries(test-openmp-iomp5 -Wl,--as-needed iomp5 )
#set_target_properties(test-openmp-iomp5 PROPERTIES LINK_FLAGS -Wl,--as-needed)
